// Generated by CoffeeScript 2.6.1
(function() {
  //!/usr/bin/env coffee

  // Mustache = require '../lib/mustache'
  var Minimist, Mustache, fs, main, syntax, version;

  Mustache = require('./mustache');

  Minimist = require('minimist');

  fs = require('fs');

  main = function() {
    var args, context, contextFile, err, mustache, options, template;
    args = Minimist(process.argv.slice(2), {
      boolean: ['help', 'version', 'pretty'],
      string: ['output', 'extension'],
      alias: {
        output: 'o',
        help: 'h',
        version: 'v',
        pretty: 'p',
        extension: 'e'
      },
      unknown: function(param) {
        if (param[0] !== '-') {
          return true;
        }
        console.error(`\nError: ${param} is not a valid switch`);
        return syntax();
      }
    });
    if (args.h || args._.length > 2) {
      // return console.log args
      syntax();
    }
    if (args.v) {
      version();
    }
    [template, contextFile] = args._;
    if (!template) {
      syntax();
    }
    if (contextFile) {
      contextFile = contextFile.replace(/\.json$/, '.json');
      try {
        context = JSON.parse(fs.readFileSync(contextFile));
      } catch (error) {
        err = error;
        console.error(err.toString());
        process.exit(1);
      }
    }
    options = {};
    options.pretty = args.p;
    if (args.e) {
      options.extension = args.e;
    }
    mustache = new Mustache(options);
    return mustache.render(template, context).then(function(output) {
      if (args.output) {
        return fs.writeFileSync(args.output, output);
      } else {
        return console.log(output);
      }
    }).catch(function(err) {
      return console.error(err.toString());
    });
  };

  syntax = function() {
    console.log(`
mustache [options] template.mustache [ context.json ]
  options:
    -o | --output:    Output path for the rendered text
                      (STDOUT if not specified)
    -p | --pretty:    Reformat the html output
    -e | --extension: override the default extension of .mustache
    -v | --version:   Print version and exit
    -h | --help:      This help list`);
    return process.exit(1);
  };

  version = function() {
    var pack;
    pack = require('../package.json');
    console.log(`mustache version ${pack.version}`);
    return process.exit(1);
  };

  module.exports = main;

}).call(this);
